[dataset]
# tensor type (float or double)
tensor_type = float

root_dir  = /home/disk2t/data/prostate/promise12/preprocess/train
train_csv = config/data/image_train.csv
valid_csv = config/data/image_valid.csv
test_csv  = config/data/image_test.csv

load_pixelwise_weight = False
# modality number
modal_num = 1

# data transforms
train_transform = [NormalizeWithMeanStd, RandomFlip,  RandomCrop, LabelToProbability]
test_transform  = [NormalizeWithMeanStd, Pad]


NormalizeWithMeanStd_channels = [0]
NormalizeWithMeanStd_mean = None
NormalizeWithMeanStd_std  = None
NormalizeWithMeanStd_mask = False
NormalizeWithMeanStd_random_fill = False
NormalizeWithMeanStd_inverse     = False

RandomFlip_flip_depth  = False
RandomFlip_flip_height = True
RandomFlip_flip_width  = True
RandomFlip_inverse     = False

RandomCrop_output_size = [48, 48, 48]
RandomCrop_foreground_focus = True
RandomCrop_foreground_ratio = 0.5
Randomcrop_mask_label       = [1]
RandomCrop_inverse     = False

LabelToProbability_class_num = 2
LabelToProbability_inverse   = False

Pad_output_size = [8, 8, 8]
Pad_ceil_mode   = True
Pad_inverse     = True

[network]
# this section gives parameters for network
# the keys may be different for different networks

# type of network
net_type = UNet3D

# number of class, required for segmentation task
class_num     = 2
in_chns       = 1
feature_chns  = [16, 24, 32, 48]
dropout       = [0.0, 0.0, 0.2, 0.3]
trilinear     = True

[training]
# list of gpus
gpus       = [0]

batch_size  = 4
loss_type     = DiceLoss
DiceLoss_enable_pixel_weight = False
DiceLoss_enable_class_weight = False

# for optimizers
optimizer     = Adam
learning_rate = 1e-3
momentum      = 0.9
weight_decay  = 1e-5

# for lr schedular (MultiStepLR)
lr_gamma      = 0.5
lr_milestones = [3000, 6000]

ckpt_save_dir    = model/unet3d/
ckpt_save_prefix = model

# start iter
iter_start = 0
iter_max   = 9000
iter_valid = 100
iter_save  = 3000

[testing]
# list of gpus
gpus       = [0]
batch_size = 1

# checkpoint mode can be [0-latest, 1-best, 2-specified]
ckpt_mode         = 0
output_dir        = result
evaluation_mode   = True
test_time_dropout = False

