[dataset]
# tensor type (float or double)
tensor_type = float

task_type = seg
root_dir  = ../../PyMIC_data/ACDC/preprocess
train_csv = config/data/image_train.csv
valid_csv = config/data/image_valid.csv
test_csv  = config/data/image_test.csv

train_batch_size = 4

# data transforms
train_transform = [Pad, RandomCrop, RandomFlip, NormalizeWithMeanStd, PartialLabelToProbability]
valid_transform       = [NormalizeWithMeanStd, Pad, LabelToProbability]
test_transform        = [NormalizeWithMeanStd, Pad]

Pad_output_size = [4, 224, 224]
Pad_ceil_mode   = False

RandomCrop_output_size = [3, 224, 224]
RandomCrop_foreground_focus = False
RandomCrop_foreground_ratio = None
Randomcrop_mask_label       = None

RandomFlip_flip_depth  = False
RandomFlip_flip_height = True
RandomFlip_flip_width  = True

NormalizeWithMeanStd_channels = [0]

[network]
# this section gives parameters for network
# the keys may be different for different networks

# type of network
net_type = UNet2D

# number of class, required for segmentation task
class_num     = 4
in_chns       = 1
feature_chns  = [16, 32, 64, 128, 256]
dropout       = [0.0, 0.0, 0.0, 0.5, 0.5]
bilinear      = True
deep_supervise= False

[training]
# list of gpus
gpus       = [1]

loss_type     = CrossEntropyLoss

# for optimizers
optimizer     = Adam
learning_rate = 1e-3
momentum      = 0.9
weight_decay  = 1e-5

# for lr schedular
lr_scheduler  = ReduceLROnPlateau
lr_gamma      = 0.5
ReduceLROnPlateau_patience = 2000
early_stop_patience = 8000

ckpt_save_dir    = model/unet2d_tv

# start iter
iter_start = 0
iter_max   = 20000
iter_valid = 100
iter_save  = [2000, 20000]

[weakly_supervised_learning]
wsl_method     = TotalVariation
regularize_w   = 0.1
rampup_start   = 2000
rampup_end     = 15000

[testing]
# list of gpus
gpus       = [0]

# checkpoint mode can be [0-latest, 1-best, 2-specified]
ckpt_mode         = 1
output_dir        = result/unet2d_tv
post_process      = KeepLargestComponent

sliding_window_enable = True
sliding_window_size   = [3, 224, 224]
sliding_window_stride = [3, 224, 224]

