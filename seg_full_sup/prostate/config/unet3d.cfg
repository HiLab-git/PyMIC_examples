[dataset]
# tensor type (float or double)
tensor_type = float

task_type = seg 
train_dir = ../../PyMIC_data/Promise12/preprocess
train_csv = config/data/image_train.csv
valid_csv = config/data/image_valid.csv
test_csv  = config/data/image_test.csv

train_batch_size = 4

# data transforms
train_transform = [RandomFlip,  RandomCrop, NormalizeWithMeanStd, GammaCorrection, GaussianNoise, LabelToProbability]
valid_transform = [NormalizeWithMeanStd, Pad, LabelToProbability]
test_transform  = [NormalizeWithMeanStd, Pad]

RandomFlip_flip_depth  = True
RandomFlip_flip_height = True
RandomFlip_flip_width  = True

RandomCrop_output_size = [48, 48, 48]
RandomCrop_foreground_focus = True
RandomCrop_foreground_ratio = 0.5
Randomcrop_mask_label       = [1]

NormalizeWithMeanStd_channels = [0]

GammaCorrection_channels  = [0]
GammaCorrection_gamma_min = 0.7
GammaCorrection_gamma_max = 1.5

GaussianNoise_channels = [0]
GaussianNoise_mean     = 0
GaussianNoise_std      = 0.05
GaussianNoise_probability = 0.5

Pad_output_size = [8, 8, 8]
Pad_ceil_mode   = True

[network]
# type of network
net_type = UNet3D

# number of class, required for segmentation task
class_num     = 2
in_chns       = 1
feature_chns  = [16, 32, 64, 128]
dropout       = [0.0, 0.0, 0.1, 0.2]
up_mode       = 2
multiscale_pred = True

[training]
# list of gpus
gpus       = [0]

mixup_probability = 0.5
loss_type     = [DiceLoss, CrossEntropyLoss]
loss_weight   = [1.0, 1.0]
deep_supervise = True

# for optimizers
optimizer     = Adam
learning_rate = 1e-3
momentum      = 0.9
weight_decay  = 1e-5

# for lr schedular (StepLR)
lr_scheduler  = StepLR
lr_gamma      = 0.5
lr_step       = 3000

ckpt_save_dir    = model/unet3d

# start iter
iter_start = 0
iter_max   = 12000
iter_valid = 200
iter_save  = 12000
early_stop_patience = 5000

[testing]
# list of gpus
gpus       = [0]

# checkpoint mode can be [0-latest, 1-best, 2-specified]
ckpt_mode         = 1
output_dir        = result
post_process      = KeepLargestComponent

sliding_window_enable = True
sliding_window_size   = [96, 96, 96]
sliding_window_stride = [96, 96, 96]

